spring:
  application:
    name: gestion-rdv-service
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5432/gestion_rdv_db}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:password}
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 20000
      maximum-pool-size: 10
      minimum-idle: 5
  jpa:
    hibernate:
      ddl-auto: ${JPA_DDL_AUTO:update}
    show-sql: ${JPA_SHOW_SQL:false}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  cache:
    type: caffeine
    caffeine:
      spec: maximumSize=1000,expireAfterWrite=10m

server:
  port: ${PORT:8083}
  servlet:
    context-path: ${CONTEXT_PATH:/api}
  error:
    include-message: always
    include-binding-errors: always

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized

logging:
  level:
    ci.hardwork.gestionrdvservice: ${LOG_LEVEL:INFO}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

app:
  jwt:
    secret: ${JWT_SECRET:mySecretKeyForJWTTokenGenerationAndValidation123456789}
    expirationMs: ${JWT_EXPIRATION_MS:86400000} # 24 heures
  auth:
    service-url: ${AUTH_SERVICE_URL:http://localhost:8081/api}
  rdv:
    duree-consultation-defaut: ${DEFAULT_CONSULTATION_DURATION:30}
    rappel-heures-avant: ${REMINDER_HOURS_BEFORE:24}
    annulation-heures-avant: ${CANCELLATION_HOURS_BEFORE:24}
  cors:
    allowed-origins: ${CORS_ORIGINS:http://localhost:3000,http://localhost:4200}

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
    tagsSorter: alpha